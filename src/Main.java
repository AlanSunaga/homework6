//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
public class Main {
    public static void main(String[] args) {

        //Задача 1
        //Продолжите работать с кодом, который вы написали в предыдущем уроке — в задачах с накоплениями.
        //
        //С помощью цикла while посчитайте, сколько месяцев потребуется, чтобы накопить 2 459 000 рублей при условии,
        // что первоначально мы имеем 0 рублей и готовы откладывать по 15 тысяч рублей.
        //
        //Результат программы должен быть выведен в консоль с тем количеством месяцев,
        // которое необходимо для накопления данной суммы. Формат сообщения: «Месяц …, сумма накоплений равна … рублей» .

        System.out.println("Задача 1");
        int accum = 0;
        int deposits = 15_000;
        int month = 0;
        while (accum < 2_459_000) {
            accum += deposits;
            month += 1;
        }
        System.out.println("Месяц " + month + ", сумма накоплений равна " + accum + " рублей");
        System.out.println();

        //Задача 2
        //Выведите в одну строку через пробел числа от 1 до 10 с помощью цикла while.
        //
        //На следующей строке выведите числа в обратном порядке от 10 до 1 с помощью цикла for.
        //
        //Для обоих циклов можно использовать как одну общую переменную, так и свою в каждом цикле.
        //
        //Не забудьте выполнить переход на новую строку между двумя циклами.
        //
        //В результате программы вывод должен получиться следующим:
        //
        //1 2 3 4 5 6 7 8 9 10
        //
        //10 9 8 7 6 5 4 3 2 1

        System.out.println("Задача 2");
        int num = 0;
        while (num < 10) {
            num++;
            System.out.print(num + " ");
        }
        System.out.println();
        for (; num > 0; ) {
            System.out.print(num + " ");
            num--;
        }
        System.out.println();

        //Задача 3
        //В стране Y население — 12 миллионов человек.
        //
        //Рождаемость составляет 17 человек на 1000, смертность — 8 человек. Рассчитайте, какая численность населения будет через 10 лет,
        // если показатели рождаемости и смертности постоянны.
        //
        //В консоль выведите результат операции на каждый год в формате: «Год …, численность населения составляет …».

        System.out.println("Задача 3");
        int allHum = 12_000_000;
        int natality = 17;
        int mortality = 8;
        int netFertility = natality - mortality;

        int year = 0;
        while (year < 10) {
            year++;
            double netFertilityInYear = ((double) netFertility / 1000) * allHum;
            allHum += (int) netFertilityInYear;
            System.out.println("Год " + year + ", численность населения составляет " + allHum);
        }
        System.out.println();

        //или

        allHum = 12_000_000;
        for (year = 1; year <= 10; year++) {
            double netFertilityInYear = ((double) netFertility / 1000) * allHum;
            allHum += (int) netFertilityInYear;
            System.out.println("Год " + year + ", численность населения составляет " + allHum);
        }
        System.out.println();

        //Задача 4
        //Василий решил положить деньги на накопительный счет, где каждый месяц к сумме его вклада добавляется еще 7%. Первоначальная сумма вклада — 15 тысяч рублей.
        //
        //Вычислите и выведите в консоль, сколько месяцев Василию нужно будет копить,
        // чтобы собрать сумму в 12 миллионов рублей при условии,
        // что процент банка от накоплений не меняется, а всегда равен 7%.
        //
        //Выведите в консоль результат программы с указанием суммы накоплений по каждому месяцу.

        System.out.println("Задача 4");
        double savings = 15_000;
        double target = 12_000_000;
        double percent = 7;
        double annual = (percent / 100);
        month = 0;
        while (savings < target) {
            savings += (savings * annual);
            month++;
            System.out.println("Месяц " + month + ", сумма накоплений равна " + (int) savings + " рублей");
        }
        System.out.println();

        //Задача 5
        //Видоизмените программу таким образом, чтобы в консоль выводились не все месяцы подряд,
        // а только каждый шестой. Должны быть видны накопления за 6-й, 12-й, 18-й, 24-й и следующие месяцы.

        System.out.println("Задача 5");
        savings = 15_000;
        annual = (percent / 100);
        month = 0;
        while (savings < target) {
            savings += (savings * annual);
            month++;
            if (month % 6 == 0) {
                System.out.println("Месяц " + month + ", сумма накоплений равна " + (int) savings + " рублей");
            }

        }
        System.out.println();

        System.out.println("Задача 6");
        //Задача 6
        //Василий решил, что будет копить деньги ближайшие 9 лет. Он хочет знать, какой будет сумма его накоплений каждые полгода на протяжении этих 9 лет.
        //
        //Исходная сумма всё та же — 15 тысяч рублей, проценты банка — 7% ежемесячно.
        //
        //Напишите программу, которая будет выводить сумму накоплений за каждые полгода в течение 9 лет.
        int endYear = 9;
        int endYearInMonth = endYear * 12;
        savings = 15_000;
        month = 0;
        while (month < endYearInMonth) {
            savings += (savings * annual);
            month++;
            if (month % 6 == 0) {
                System.out.println("Месяц " + month + ", сумма накоплений равна " + (int) savings + " рублей");
            }
        }
        System.out.println();

        //Задача 7
        //В компании пятница — отчетный день.
        //
        //Нужно написать программу, которая считает дни месяца по датам, определяет, какой день — пятница, и выводит сообщение с напоминанием, что нужно подготовить еженедельный отчет.
        //
        //Создайте переменную типа int, которая хранит в себе число, выпадающее на первую пятницу месяца (число от 1 до 7).
        //
        //Выведите на каждую пятницу месяца (включая полученную) сообщение следующего вида: «Сегодня пятница, ...-е число. Необходимо подготовить отчет».
        //
        //В нашем месяце 31 день. В результате у вас должно получиться от 4 до 5 сообщений с напоминаниями по разным датам.

        System.out.println("Задача 7");
        int numMonth = (int) (Math.random() * 7) + 1;
        int endMonth = 31;
        int day = 1;
        while (day <= endMonth) {
            day++;
            if ((day - numMonth) % 7 == 0) {
                System.out.println("Сегодня пятница, " + day + "-е число. Необходимо подготовить отчет.");
            }
        }
        System.out.println();

        //или

        for (day = 1; day <= endMonth; day++) {
            if ((day - numMonth) % 7 == 0) {
                System.out.println("Сегодня пятница, " + day + "-е число. Необходимо подготовить отчет.");
            }
        }
        System.out.println();

        //Задача 8
        //Нам нужно написать астрономическое приложение, которое считает, когда над Землей пролетает комета.
        //
        //Известно, что комета пролетает каждый 79-й год, начиная с нулевого.
        //
        //В консоль нужно вывести все годы за последние 200 лет, когда появлялась комета, а также следующий год ее появления (ближайшие 100 лет).
        //
        //Для вычисления периода можно создать две дополнительные переменные,
        // которые содержат год за 200 лет до текущего (из созданной ранее переменной) в качестве старта и 100 лет после в качестве завершения периода расчета.
        //
        //В результате решения задачи в консоли должен получиться следующий результат:
        //
        //1896
        //
        //1975
        //
        //2054

        System.out.println("Задача 8");
        int cometaPeriod = 79;
        int cometaRangeBefore = 200;
        int cometaRangeAfte = 100;
        int nowYear = 2025;
        int periodBefore = nowYear - cometaRangeBefore;
        int periodAfter = nowYear + cometaRangeAfte;
        int YearCount = 0;

        while (YearCount < periodAfter) {
            YearCount += cometaPeriod;
            if (YearCount > periodBefore & YearCount < periodAfter) {
                System.out.println(YearCount);
            }
        }
    }
}